# Generated by Django 4.2.4 on 2025-03-31 06:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('school', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basemodel')),
                ('title', models.CharField(max_length=200)),
                ('authors', models.CharField(max_length=200)),
                ('isbn', models.CharField(max_length=13, unique=True)),
                ('publication_date', models.DateField()),
                ('publisher', models.CharField(max_length=100)),
                ('edition', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('call_number', models.CharField(max_length=50, unique=True)),
                ('total_copies', models.IntegerField(default=1)),
                ('available_copies', models.IntegerField(default=1)),
                ('language', models.CharField(max_length=50)),
                ('page_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('core.basemodel',),
        ),
        migrations.CreateModel(
            name='BookCopy',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basemodel')),
                ('accession_number', models.CharField(max_length=20, unique=True)),
                ('is_available', models.BooleanField(default=True)),
                ('book_copy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='copies', to='library.book')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('core.basemodel',),
        ),
        migrations.CreateModel(
            name='BookLoan',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basemodel')),
                ('loan_date', models.DateField(auto_now_add=True)),
                ('due_date', models.DateField()),
                ('return_date', models.DateField(blank=True, null=True)),
                ('is_returned', models.BooleanField(default=False)),
                ('renewed_count', models.IntegerField(default=0)),
                ('fine_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('book_copy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='library.bookcopy')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('core.basemodel',),
        ),
        migrations.CreateModel(
            name='LibraryCategory',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basemodel')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('core.basemodel',),
        ),
        migrations.CreateModel(
            name='LibraryMember',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basemodel')),
                ('member_id', models.CharField(max_length=10, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('expiry_date', models.DateField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='school.student')),
            ],
            options={
                'verbose_name': 'Library Member',
                'verbose_name_plural': 'Library Members',
            },
            bases=('core.basemodel',),
        ),
        migrations.CreateModel(
            name='LibraryStatistics',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basemodel')),
                ('date', models.DateField(unique=True)),
                ('total_books', models.IntegerField()),
                ('total_members', models.IntegerField()),
                ('active_loans', models.IntegerField()),
                ('overdue_loans', models.IntegerField()),
                ('new_members', models.IntegerField()),
                ('books_added', models.IntegerField()),
                ('total_reservations', models.IntegerField()),
                ('fine_amount_collected', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'ordering': ['-date'],
            },
            bases=('core.basemodel',),
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basemodel')),
                ('reservation_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateField()),
                ('res_status', models.CharField(choices=[('PENDING', 'Pending'), ('FULFILLED', 'Fulfilled'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.librarymember')),
                ('reserver_book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
            ],
            options={
                'ordering': ('-reservation_date',),
            },
            bases=('core.basemodel',),
        ),
        migrations.CreateModel(
            name='LibraryCard',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basemodel')),
                ('card_number', models.CharField(max_length=20, unique=True)),
                ('issue_date', models.DateField(auto_now_add=True)),
                ('expiry_date', models.DateField()),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='library.librarymember')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('core.basemodel',),
        ),
        migrations.CreateModel(
            name='Librarian',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basemodel')),
                ('librarian_id', models.CharField(max_length=10, unique=True)),
                ('library_staff', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='school.staff')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('core.basemodel',),
        ),
        migrations.CreateModel(
            name='Fine',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basemodel')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6)),
                ('reason', models.CharField(max_length=100)),
                ('date_issued', models.DateTimeField(auto_now_add=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('loan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fine', to='library.bookloan')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('core.basemodel',),
        ),
        migrations.AddField(
            model_name='bookloan',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.librarymember'),
        ),
        migrations.AddField(
            model_name='bookloan',
            name='school_librarian',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.librarian'),
        ),
        migrations.AddField(
            model_name='book',
            name='categories',
            field=models.ManyToManyField(related_name='books', to='library.librarycategory'),
        ),
        migrations.AddConstraint(
            model_name='reservation',
            constraint=models.UniqueConstraint(condition=models.Q(('res_status', 'PENDING')), fields=('reserver_book', 'member'), name='unique_pending_reservation'),
        ),
    ]
